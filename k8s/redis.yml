apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-persistent-volume-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-persistent-volume-claim
      containers:
        - name: redis
          image: redis
          imagePullPolicy: Always
          args: ["--appendonly", "yes", "--save", "900", "1", "--save", "30", "2"]
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: redis-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.passHostHeader: "true"
    traefik.frontend.priority: "2"
spec:
  rules:
  - host: redis.renderproxy.com
    http:
      paths:
      - path: /
        backend:
          serviceName: redis
          servicePort: 6379